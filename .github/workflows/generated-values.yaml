name: Generate Optimized Helm Values

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
        - dev
        - staging
        - prod
        default: 'prod'
      ai_provider:
        description: 'AI Provider'
        required: false
        type: choice
        options:
        - copilot
        - openai
        default: 'copilot'
  
  # Auto-trigger on operational context changes
  push:
    paths:
      - 'docs/operational-context.yaml'
    branches: [main]

jobs:
  generate-values:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Read current values
      id: current_values
      run: |
        content=$(cat helm/values.yaml | base64 -w 0)
        echo "content=$content" >> $GITHUB_OUTPUT
    
    - name: Read operational context
      id: operational_context
      run: |
        content=$(cat docs/operational-context.yaml | base64 -w 0)
        echo "content=$content" >> $GITHUB_OUTPUT
    
    - name: Read Helm templates
      id: helm_templates
      run: |
        # Initialize empty JSON array
        templates_json="[]"
        
        # Check if templates directory exists and has files
        if [ -d "helm/templates" ] && [ "$(ls -A helm/templates/*.yaml 2>/dev/null)" ]; then
          echo "Found Helm templates, processing..."
          templates_json="["
          first=true
          
          for file in helm/templates/*.yaml; do
            if [ -f "$file" ]; then
              echo "Processing $file"
              
              # Add comma separator for all but first item
              if [ "$first" = true ]; then
                first=false
              else
                templates_json="${templates_json},"
              fi
              
              # Escape and add file content as JSON string
              content=$(cat "$file" | jq -R -s '.')
              templates_json="${templates_json}${content}"
            fi
          done
          
          templates_json="${templates_json}]"
        else
          echo "No Helm templates found, using empty array"
        fi
        
        # Validate JSON
        echo "$templates_json" | jq . > /dev/null || {
          echo "::error::Generated invalid JSON for templates"
          exit 1
        }
        
        echo "Generated templates JSON length: ${#templates_json}"
        
        # Use GitHub Actions output format with proper escaping
        content=$(echo "$templates_json" | base64 -w 0)
        echo "content=$content" >> $GITHUB_OUTPUT
    
    - name: Generate AI-optimized values
      id: generate
      uses: paulovitorcl/workshop-action@main
      with:
        app_name: ${{ github.event.repository.name }}
        environment: ${{ inputs.environment || 'prod' }}
        current_values: ${{ steps.current_values.outputs.content }}
        operational_context: ${{ steps.operational_context.outputs.content }}
        helm_templates: ${{ steps.helm_templates.outputs.content }}
        ai_provider: ${{ inputs.ai_provider || 'copilot' }}
        ai_token: ${{ secrets.AI_TOKEN }}
    
    - name: Create optimized values file
      run: |
        mkdir -p generated
        echo "${{ steps.generate.outputs.generated_values }}" > values.yaml
    
    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PR_TOKEN }}
        commit-message: "feat: AI-optimized values for ${{ inputs.environment || 'prod' }}"
        title: "🤖 AI-Optimized Helm Values - ${{ inputs.environment || 'prod' }}"
        body: |
          ## 🤖 AI-Generated Helm Values Optimization
          
          **Environment:** `${{ inputs.environment || 'prod' }}`
          **AI Provider:** `${{ inputs.ai_provider || 'copilot' }}`
          
          ### 📊 AI Analysis
          ```
          ${{ steps.generate.outputs.ai_analysis }}
          ```
          
          ### 🔄 Changes Made
          ```
          ${{ steps.generate.outputs.changes_summary }}
          ```
          
          ### 📋 Review Checklist
          - [ ] Resource limits are appropriate for the workload
          - [ ] Probe timeouts match application startup time
          - [ ] Autoscaling settings handle expected traffic
          - [ ] Security contexts are maintained
          
          **⚠️ Please review carefully before merging**
          
          ---
          
          /copilot Please review these Helm value changes and provide optimization suggestions
        branch: ai-optimization/${{ inputs.environment || 'prod' }}-${{ github.run_number }}
        delete-branch: true
    
    - name: Request Copilot Review
      if: steps.create_pr.outputs.pull-request-number
      run: |
        gh pr comment ${{ steps.create_pr.outputs.pull-request-number }} --body "@github-copilot[bot] please review these changes and suggest any improvements for Kubernetes deployment optimization"
      env:
        GH_TOKEN: ${{ secrets.PR_TOKEN }}
